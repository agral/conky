#!/usr/bin/bash

# Name:          WorktimeSet
# Description:   Sets or clears the work time start value. Used with conky-clock module.
# Options:       -k: clear the worktime.
# Created on:    26.01.2020
# Last modified: 26.01.2020
# Author:        Adam GraliÅ„ski (adam@gralin.ski)
# License:       CC0


WORKTIME_ROOT="/tmp/Clock/Worktime"
WORKTIME_START_FILE="${WORKTIME_ROOT}/start"
WORKTIME_TARGET_FILE="${WORKTIME_ROOT}/target"

# Poor man's option checker:
if [ "${1}" == "-k" ]; then
  rm "${WORKTIME_START_FILE}"
  rm "${WORKTIME_TARGET_FILE}"
  printf "Cleaned the worktime session.\n"
  exit
fi

# Sets the work start time.
if [ ${#} -gt 0 ]; then
  # User provided a desired work start time. This value will be used.
  if [[ ! $1 =~ ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$ ]]; then
    >&2 printf "Error: Incorrect time value [%s].\n" "${1}"
    >&2 printf "Aborting.\n"
    exit 1
  fi

  start_time="${1}"
else
  current_time="$(date "+%H:%M")"
  printf "No arguments given. Is using current time [%s] okay?\n" \
      "${current_time}"
  printf "Press any key to accept, <Ctrl-C> to bail out.\n"
  read -rn 1
  start_time="${current_time}"
fi

IFS=':' read -ra time_array <<< "${start_time}"
raw_start_hours="${time_array[0]}"
raw_start_minutes="${time_array[1]}"

# Removes the (allowed) zeroes from the beginning of raw hour/minute strings:
start_hours="$(( 10#$raw_start_hours ))"
start_minutes="$(( 10#$raw_start_minutes ))"

# Calculates the amount of seconds elapsed since midnight to start_time:
start_seconds="$((start_hours * 3600 + start_minutes * 60))"
echo $start_seconds

# Calculates the target work time - which is 8:00 hours later.
DELTA_HOURS=8
DELTA_SECONDS=28800  # == 480 minutes * 60 (seconds/minute)
target_hours="$((start_hours + DELTA_HOURS))"
target_minutes="${start_minutes}"  # valid when DELTA_HOURS is hardcoded to int

target_seconds="$((start_seconds + DELTA_SECONDS))"

mkdir -p "${WORKTIME_ROOT}"
if [ "${?}" -ne 0 ]; then
  >&2 printf "Error: could not create a directory [%s].\n" "${WORKTIME_ROOT}"
  >&2 printf "Aborting.\n"
  exit 2
fi

printf "%d\n" "${start_seconds}" > "${WORKTIME_START_FILE}"
printf "%d\n" "${target_seconds}" > "${WORKTIME_TARGET_FILE}"
printf "%s: %02d:%02d, %s: %02d:%02d.\n" \
    "Done. Registered start time" "${start_hours}" "${start_minutes}" \
    "suggested leave time" "${target_hours}" "${target_minutes}"
